---
import { type CollectionEntry, getCollection, getEntry } from "astro:content";
import PageLayout from "@/layouts/page.layout.astro";
import { Image } from "astro:assets";
import BearInfoBox from "@/components/bears/info-box.astro";
import moment from "moment";
import Separator from "@/components/layout/separator.astro";
import Container from "@/components/ui/container.astro";
import Block from "@/components/ui/block.astro";

export async function getStaticPaths() {
    const bearsCollection: CollectionEntry<"bears">[] =
        await getCollection("bears");
    return bearsCollection.map((item) => ({
        params: { slug: item.slug },
        props: item,
    }));
}
type Props = CollectionEntry<"bears">;

const bear = Astro.props;

const {
    name,
    picture,
    brand,
    species,
    rescued,
    uploadedOn,
    rehomed,
    event,
    description,
} = bear.data;

const {
    data: { name: brandName },
} = await getEntry(brand);

const {
    data: { name: speciesName },
} = await getEntry(species);

const {
    data: { name: rescuedName },
} = await getEntry(rescued.location);

let rehomedName = "";
if (rehomed) {
    const rehomedEntry = await getEntry(rehomed.location);

    rehomedName = rehomedEntry.data.name;
}

let eventName = "";
let eventDate = null;
if (event) {
    const eventEntry = await getEntry(event);

    eventName = eventEntry.data.name;
    eventDate = eventEntry.data.date;
}

// const { Content } = await bear.render();
---

<!-- bg-mandy-400 --><!-- bg-mandy-300 --><!-- bg-mandy-200 --><!-- bg-mandy-100 --><!-- border-mandy-400 --><!-- border-mandy-300 --><!-- border-mandy-200 --><!-- border-mandy-100 -->
<PageLayout
    title={name + " Bear"}
    heading={"This is " + name}
    subText={description ?? ""}
>
    <Container className="flex flex-col lg:flex-row lg:items-center lg:gap-8">
        <Block className="order-1">
            <Image
                loading={"lazy"}
                src={picture}
                width={640}
                height={480}
                alt={"A picture of " + name}
                class="w-full h-full rounded"
            />
        </Block>
        <Block className="order-2 lg:w-2/4 flex flex-col gap-4">
            <div class="flex flex-col lg:flex-row w-full flex-1 gap-4">
                <BearInfoBox title="Brand" color="mandy-400" outline={false}>
                    {brandName}
                </BearInfoBox>

                <BearInfoBox title="Species" color="mandy-400" outline={false}>
                    {speciesName}
                </BearInfoBox>
            </div>

            <BearInfoBox title="Rescued" color="mandy-300" outline={false}>
                {moment(rescued.date).format("Do MMMM YYYY")} from {rescuedName}
            </BearInfoBox>

            <BearInfoBox title="Uploaded" color="mandy-200" outline={false}>
                {moment(uploadedOn).format("Do MMMM YYYY")}
            </BearInfoBox>

            <BearInfoBox
                title="Event"
                color="mandy-200"
                outline={event == null}
            >
                {
                    event && (
                        <>
                            {moment(eventDate).format("Do MMMM YYYY")} at{" "}
                            {eventName}
                        </>
                    )
                }

                {!event && <>NOT YET!</>}
            </BearInfoBox>

            <BearInfoBox
                title="Rehomed"
                color="mandy-100"
                outline={rehomed == undefined}
            >
                {
                    rehomed && (
                        <>
                            {moment(rehomed.date).format("Do MMMM YYYY")} to{" "}
                            {rehomedName}
                        </>
                    )
                }

                {!rehomed && <>NOT YET!</>}
            </BearInfoBox>
        </Block>
    </Container>

    <Separator />
</PageLayout>
