---
import { type CollectionEntry, getCollection, getEntry } from "astro:content";
import SubPageLayout from "@/layouts/sub-page.layout.astro";
import { Image } from "astro:assets";
import BearInfoBox from "@/components/bears/info-box.astro";
import moment from "moment";

export async function getStaticPaths() {
    const bearsCollection: CollectionEntry<"bears">[] =
        await getCollection("bears");
    return bearsCollection.map((item) => ({
        params: { slug: item.slug },
        props: item,
    }));
}
type Props = CollectionEntry<"bears">;

const bear = Astro.props;

const { name, picture, info, rescued, uploadedOn, rehomed, event } = bear.data;

const {
    data: { name: brandName },
} = await getEntry(info.brand);

const {
    data: { name: speciesName },
} = await getEntry(info.species);

const {
    data: { name: rescuedName },
} = await getEntry(rescued.location);

let rehomedName = "";
if (rehomed) {
    const rehomedEntry = await getEntry(rehomed.location);

    rehomedName = rehomedEntry.data.name;
}

let eventName = "";
let eventDate = null;
if (event) {
    const eventEntry = await getEntry(event);

    eventName = eventEntry.data.name;
    eventDate = eventEntry.data.date;
}

const { Content } = await bear.render();
---

<SubPageLayout title={name + " Bear"} heading={"This is " + name}>
    <div
        class="container mx-auto flex flex-wrap lg:flex-row flex-col justify-center"
    >
        <div
            class="order-3 lg:order-2 px-4 lg:w-1/2 flex flex-col flex-1 gap-4"
        >
            <div class="flex flex-col lg:flex-row w-full gap-4 flex-1">
                <BearInfoBox
                    href={info.brand.slug}
                    title="Brand"
                    color="mandy-400"
                    outline={false}
                >
                    {brandName}
                </BearInfoBox>

                <BearInfoBox
                    href={info.species.slug}
                    title="Species"
                    color="mandy-400"
                    outline={false}
                >
                    {speciesName}
                </BearInfoBox>
            </div>

            <BearInfoBox
                href={rescued.location.slug}
                title="Rescued"
                color="mandy-300"
                outline={false}
            >
                {moment(rescued.date).fromNow()} from {rescuedName}
            </BearInfoBox>

            <BearInfoBox title="Uploaded" color="mandy-200" outline={false}>
                {moment(uploadedOn).fromNow()}
            </BearInfoBox>

            {
                event && (
                    <BearInfoBox
                        href={event.slug}
                        title="Event"
                        color="mandy-200"
                        outline={false}
                    >
                        {moment(eventDate).fromNow()} at {eventName}
                    </BearInfoBox>
                )
            }
            <!-- bg-mandy-400 -->
            <!-- bg-mandy-300 -->
            <!-- bg-mandy-200 -->
            <!-- bg-mandy-100 -->
            <!-- border-mandy-400 -->
            <!-- border-mandy-300 -->
            <!-- border-mandy-200 -->
            <!-- border-mandy-100 -->
            {
                !event && (
                    <BearInfoBox title="Event" color="mandy-200" outline={true}>
                        NOT YET!
                    </BearInfoBox>
                )
            }

            {
                rehomed && (
                    <BearInfoBox
                        href={rehomed.location.slug}
                        title="Rehomed"
                        color="mandy-100"
                        outline={false}
                    >
                        {moment(rehomed.date).fromNow()} to {rehomedName}
                    </BearInfoBox>
                )
            }

            {
                !rehomed && (
                    <BearInfoBox
                        title="Rehomed"
                        color="mandy-100"
                        outline={true}
                    >
                        NOT YET!
                    </BearInfoBox>
                )
            }
        </div>
        <div class="order-2 lg:order-3 px-4 lg:w-1/2 flex justify-center">
            <Image
                loading={"lazy"}
                src={picture}
                alt={"A picture of " + name}
                quality={100}
            />
        </div>
    </div>
</SubPageLayout>
